import sys
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton, QHBoxLayout, QGroupBox, QDialog, QVBoxLayout, QInputDialog, QLineEdit
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import pyqtSlot


class App(QWidget):

    def __init__(self):
        super().__init__()
        self.title = 'Life App'
        self.left = 2000
        self.top = 10
        self.width = 640
        self.height = 480
        self.initUI()

    def initUI(self):
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)

        self.feel()
        self.recAct()

        class App(QDialog):

            def __init__(self):
                super().__init__()
                self.title = 'life app'
                self.left = 2000
                self.top = 10
                self.width = 320
                self.height = 100
                self.initUI()

            def initUI(self):
                self.setWindowTitle(self.title)
                self.setGeometry(self.left, self.top, self.width, self.height)

                self.createHorizontalLayout()

                windowLayout = QVBoxLayout()
                windowLayout.addWidget(self.horizontalGroupBox)
                self.setLayout(windowLayout)

                self.show()


            def createHorizontalLayout(self):
                self.horizontalGroupBox = QGroupBox("Wokrout/Yoga")
                layout = QHBoxLayout()

                buttonBlue = QPushButton('No', self)
                buttonBlue.clicked.connect(self.on_click_n)
                layout.addWidget(buttonBlue)

                buttonRed = QPushButton('Yes', self)
                buttonRed.clicked.connect(self.on_click_y)
                layout.addWidget(buttonRed)


                self.horizontalGroupBox.setLayout(layout)

            @pyqtSlot()
            def on_click_n(self):
                print('n')
                self.close()

            @pyqtSlot()
            def on_click_y(self):
                print('y')
                self.close()

        if __name__ == '__main__':
            app = QApplication(sys.argv)
            ex = App()
            sys.exit(app.exec_())


        self.nexAct()
        self.show()


    def feel(self):
        text, okPressed = QInputDialog.getText(self, "Get text", "How do you feel: ", QLineEdit.Normal, "")
        if okPressed and text != '':
            print(text)

    def recAct(self):
        text, okPressed = QInputDialog.getText(self, "Get text", "Most recent activity: ", QLineEdit.Normal, "")
        if okPressed and text != '':
            print(text)

    def nexAct(self):
        text, okPressed = QInputDialog.getText(self, "Get text", "Next activity: ", QLineEdit.Normal, "")
        if okPressed and text != '':
            print(text)




if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    sys.exit(app.exec_())
